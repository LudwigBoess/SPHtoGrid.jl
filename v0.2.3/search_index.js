var documenterSearchIndex = {"docs":
[{"location":"api/#API-Reference","page":"API reference","title":"API Reference","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"CurrentModule = SPHtoGrid\nDocTestSetup = quote\n    using SPHtoGrid\nend","category":"page"},{"location":"api/","page":"API reference","title":"API reference","text":"","category":"page"},{"location":"api/#Exported-Functions","page":"API reference","title":"Exported Functions","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [SPHtoGrid]\nPrivate = false\nOrder = [:function]","category":"page"},{"location":"api/#SPHtoGrid.filter_particles_in_image-Tuple{Any,Any,mappingParameters}","page":"API reference","title":"SPHtoGrid.filter_particles_in_image","text":"filter_particles_in_image(x, hsml, param::mappingParameters)\n\nChecks if a particle is contained in the image and returns an array of Bool.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.kernel_value_2D-Tuple{Cubic,Float64,Float64}","page":"API reference","title":"SPHtoGrid.kernel_value_2D","text":"kernel_value_2D(kernel::Cubic, u::Float64, h_inv::Float64)\n\nEvaluate cubic spline at position u = \fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.kernel_value_2D-Tuple{Quintic,Float64,Float64}","page":"API reference","title":"SPHtoGrid.kernel_value_2D","text":"kernel_value_2D(kernel::Quintic, u::Float64, h_inv::Float64)\n\nEvaluate quintic spline at position u = \fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.kernel_value_2D-Tuple{WendlandC4,Float64,Float64}","page":"API reference","title":"SPHtoGrid.kernel_value_2D","text":"kernel_value_2D(kernel::WendlandC4, u::Float64, h_inv::Float64)\n\nEvaluate WendlandC4 spline at position u = \fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.kernel_value_2D-Tuple{WendlandC6,Float64,Float64}","page":"API reference","title":"SPHtoGrid.kernel_value_2D","text":"kernel_value_2D(kernel::WendlandC6, u::Float64, h_inv::Float64)\n\nEvaluate WendlandC6 spline at position u = \fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.kernel_value_3D-Tuple{Cubic,Float64,Float64}","page":"API reference","title":"SPHtoGrid.kernel_value_3D","text":"kernel_value_3D(kernel::Cubic, u::Float64, h_inv::Float64)\n\nEvaluate cubic spline at position u = \fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.kernel_value_3D-Tuple{Quintic,Float64,Float64}","page":"API reference","title":"SPHtoGrid.kernel_value_3D","text":"kernel_value_3D(kernel::Quintic, u::Float64, h_inv::Float64)\n\nEvaluate quintic spline at position u = \fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.kernel_value_3D-Tuple{WendlandC4,Float64,Float64}","page":"API reference","title":"SPHtoGrid.kernel_value_3D","text":"kernel_value_3D(kernel::WendlandC4, u::Float64, h_inv::Float64)\n\nEvaluate WendlandC4 spline at position u = \fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.kernel_value_3D-Tuple{WendlandC6,Float64,Float64}","page":"API reference","title":"SPHtoGrid.kernel_value_3D","text":"kernel_value_3D(kernel::WendlandC6, u::Float64, h_inv::Float64)\n\nEvaluate WendlandC6 spline at position u = \fracxh.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.read_smac1_binary_image-Tuple{String}","page":"API reference","title":"SPHtoGrid.read_smac1_binary_image","text":"read_smac1_binary_image(filename::String)\n\nReads a binary image file from Smac and returns a Matrix with the pixel values.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.read_smac1_binary_info-Tuple{String}","page":"API reference","title":"SPHtoGrid.read_smac1_binary_info","text":"read_smac1_binary_info(filename::String)\n\nReturns the image info in a Smac1ImageInfo struct.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.sphMapping-NTuple{5,Any}","page":"API reference","title":"SPHtoGrid.sphMapping","text":"sphMapping(Pos, HSML, M, ρ, Bin_Quant;\n        param::mappingParameters,\n        kernel::SPHKernel[,\n        show_progress::Bool=true,\n        conserve_quantities::Bool=true,\n        parallel::Bool=true,\n        filter_particles::Bool=true,\n        dimensions::Int=2])\n\nMaps the data in Bin_Quant to a grid. Parameters of mapping are supplied in param and the kernel to be used in kernel.\n\nArguments\n\nPos: Array with particle positions.\nHSML: Array with particle hsml.\nM: Array with particle masses.\nρ: Array with particle densities.\nBin_Quant: Array with particle quantity to be mapped.\nkernel::SPHKernel: Kernel object to be used.\nshow_progress::Bool=true: Show progress bar.\nconserve_quantities::Bool=true: If quantities should be conserved while mapping, like in Smac (Dolag et. al. 2005).\nparallel::Bool=true: Run on multiple processors.\nfilter_particles::Bool=true: Find the particles that are actually contained in the image.\ndimensions::Int=2: Number of mapping dimensions (2 = to grid, 3 = to cube).\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.write_smac1_par","page":"API reference","title":"SPHtoGrid.write_smac1_par","text":"write_smac1_par([...])\n\nWrites a Smac parameter file. Not all relevant parameters implemented yet!\n\n\n\n\n\n","category":"function"},{"location":"api/#SPHtoGrid.write_smac2_par","page":"API reference","title":"SPHtoGrid.write_smac2_par","text":"write_smac2_par([...])\n\nWrites a P-Smac2 parameter file. Not all relevant parameters implemented yet!\n\n\n\n\n\n","category":"function"},{"location":"api/#Exported-Types","page":"API reference","title":"Exported Types","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [SPHtoGrid]\nPrivate = false\nOrder = [:type]","category":"page"},{"location":"api/#SPHtoGrid.Cubic","page":"API reference","title":"SPHtoGrid.Cubic","text":"struct Cubic <: SPHKernel\n    n_neighbours::Int64\n    norm_2D::Float64\n    norm_3D::Float64\nend\n\nDatatype for cubic sph spline.\n\n\n\n\n\n","category":"type"},{"location":"api/#SPHtoGrid.Quintic","page":"API reference","title":"SPHtoGrid.Quintic","text":"struct Quintic <: SPHKernel\n    n_neighbours::Int64\n    norm_2D::Float64\n    norm_3D::Float64\nend\n\nDatatype for quintic sph spline.\n\n\n\n\n\n","category":"type"},{"location":"api/#SPHtoGrid.WendlandC4","page":"API reference","title":"SPHtoGrid.WendlandC4","text":"struct WendlandC4 <: SPHKernel\n    n_neighbours::Int64\n    norm_2D::Float64\n    norm_3D::Float64\nend\n\n\n\n\n\n","category":"type"},{"location":"api/#SPHtoGrid.WendlandC6","page":"API reference","title":"SPHtoGrid.WendlandC6","text":"struct WendlandC6 <: SPHKernel\n    n_neighbours::Int64\n    norm_2D::Float64\n    norm_3D::Float64\nend\n\n\n\n\n\n","category":"type"},{"location":"api/#SPHtoGrid.mappingParameters","page":"API reference","title":"SPHtoGrid.mappingParameters","text":"struct mappingParameters\n    x_lim::Vector{Float64}\n    y_lim::Vector{Float64}\n    z_lim::Vector{Float64}\n    center::Vector{Float64}\n    pixelSideLength::Float64\n    pixelArea::Float64\n    Npixels::Vector{Int64}\n    x_size::Float64\n    y_size::Float64\n    z_size::Float64\nend\n\nConstructor:\n\nmappingParameters(;x_lim::Vector{Float64}   = [-1.0, -1.0],\n                   y_lim::Vector{Float64}   = [-1.0, -1.0],\n                   z_lim::Vector{Float64}   = [-1.0, -1.0],\n                   center::Vector{Float64}  = [-1.0, -1.0, -1.0],\n                   x_size::Float64          =  -1.0,\n                   y_size::Float64          =  -1.0,\n                   z_size::Float64          =  -1.0,\n                   pixelSideLength::Float64 =  -1.0,\n                   Npixels::Int64           =   0)\n\nParameter object for sph to grid mapping. Define either *_lim, or center and *_size.  Resolution is defined by pixelSideLength or Npixels.\n\n\n\n\n\n","category":"type"},{"location":"api/#Private-Functions","page":"API reference","title":"Private Functions","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [SPHtoGrid]\nPublic = false\nOrder = [:function]","category":"page"},{"location":"api/#SPHtoGrid.check_center_and_move_particles-Tuple{Any,mappingParameters}","page":"API reference","title":"SPHtoGrid.check_center_and_move_particles","text":"check_center_and_move_particles(x, par::mappingParameters)\n\nMapping only works if all coordinates are positive. This function shifts the particles into a positive coordinate region.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.check_in_image-NTuple{4,Float64}","page":"API reference","title":"SPHtoGrid.check_in_image","text":"check_in_image( pos::Float64, hsml::Float64,\n                minCoords::Float64, maxCoords::Float64 )\n\nChecks if a particle is in the image frame.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.domain_decomposition-Tuple{Int64,Int64}","page":"API reference","title":"SPHtoGrid.domain_decomposition","text":"domain_decomposition(N::Int64, N_workers::Int64)\n\nCalculate relevant array slices for each worker. Could be done better!\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.find_max_pixel-Tuple{Float64,Float64,AbstractFloat,Float64,Integer}","page":"API reference","title":"SPHtoGrid.find_max_pixel","text":"find_max_pixel( pos::Float64, hsml::Float64,\n                minCoords::AbstractFloat, pixsize_inv::Float64, \n                max_pixel::Integer )\n\nComputes the maximum pixel to which the particle contributes.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.find_min_pixel-NTuple{4,Float64}","page":"API reference","title":"SPHtoGrid.find_min_pixel","text":"find_min_pixel( pos::Float64, hsml::Float64,\n                minCoords::Float64,\n                pixsize_inv::Float64 )\n\nComputes the minimum pixel to which the particle contributes.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.get_d_hsml_2D-Tuple{Float64,Float64,Float64}","page":"API reference","title":"SPHtoGrid.get_d_hsml_2D","text":"get_d_hsml_2D( dx::Float64, dy::Float64,\n               hsml_inv::Float64 )\n\nComputes the distance in 2D to the pixel center in units of the kernel support.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.get_d_hsml_3D-NTuple{4,Float64}","page":"API reference","title":"SPHtoGrid.get_d_hsml_3D","text":"get_d_hsml_3D( dx::Float64, dy::Float64, dz::Float64,\n               hsml_inv::Float64 )\n\nComputes the distance in 3D to the pixel center in units of the kernel support.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.sphMapping_2D-NTuple{5,Any}","page":"API reference","title":"SPHtoGrid.sphMapping_2D","text":"sphMapping2D(Pos, HSML, M, ρ, BinQuant;                  param::mappingParameters, kernel,                  conservequantities::Bool=false,                  showprogress::Bool=false)\n\nUnderlying function to map SPH data to a 2D grid.\n\n\n\n\n\n","category":"method"},{"location":"api/#SPHtoGrid.sphMapping_3D-NTuple{5,Any}","page":"API reference","title":"SPHtoGrid.sphMapping_3D","text":"sphMapping3D(Pos, HSML, M, ρ, BinQuant;                  param::mappingParameters, kernel,                  conservequantities::Bool=false,                  showprogress::Bool=false)\n\nUnderlying function to map SPH data to a 3D grid.\n\n\n\n\n\n","category":"method"},{"location":"api/#Private-Types","page":"API reference","title":"Private Types","text":"","category":"section"},{"location":"api/","page":"API reference","title":"API reference","text":"Modules = [SPHtoGrid]\nPublic = false\nOrder = [:type]","category":"page"},{"location":"api/#SPHtoGrid.SPHKernel","page":"API reference","title":"SPHtoGrid.SPHKernel","text":"SPHKernel\n\nSupertype for all SPH kernels.\n\n\n\n\n\n","category":"type"},{"location":"api/#SPHtoGrid.Smac1ImageInfo","page":"API reference","title":"SPHtoGrid.Smac1ImageInfo","text":"struct Smac1ImageInfo\n\nStores the information in a Smac binary image header.\n\n\n\n\n\n","category":"type"},{"location":"external/#External-Programs","page":"External Programs","title":"External Programs","text":"","category":"section"},{"location":"external/","page":"External Programs","title":"External Programs","text":"SPHtoGrid.jl provides helper function for two external sph mapping Codes: Smac and P-Smac2.","category":"page"},{"location":"external/#P-Smac2","page":"External Programs","title":"P-Smac2","text":"","category":"section"},{"location":"external/","page":"External Programs","title":"External Programs","text":"P-Smac2 by Julius Donnert is an advanced mapping code for a multitude of different quantities. To run a mapping and plotting loop from a Julia script you need to update the parameter files on the fly. The function write_smac2_par provides this functionality.","category":"page"},{"location":"external/","page":"External Programs","title":"External Programs","text":"write_smac2_par(x, y, z,\n                euler_angle_0, euler_angle_1, euler_angle_2,\n                xy_size, z_depth, xy_pix::Int64,\n                input_file, output_file, path,\n                effect_module::Int64=0, effect_flag::Int64=0)","category":"page"},{"location":"external/#Smac","page":"External Programs","title":"Smac","text":"","category":"section"},{"location":"external/","page":"External Programs","title":"External Programs","text":"Smac is a SPH mapping Code by Klaus Dolag and others. The implementation is described in Dolag et al. 2005.","category":"page"},{"location":"external/","page":"External Programs","title":"External Programs","text":"Smac isn't public unfortunately. So these functions are mainly for my personal use. If you do have access to Smac, here's a reference to what you can do.","category":"page"},{"location":"external/","page":"External Programs","title":"External Programs","text":"SPHtoGrid.jl provides some functions to read the binary output of Smac, as I personally prefer that over the FITS output. To get the binary format you need to set FILE_FORMAT = 1 in the parameter file.","category":"page"},{"location":"external/#Reading-image-information","page":"External Programs","title":"Reading image information","text":"","category":"section"},{"location":"external/","page":"External Programs","title":"External Programs","text":"If you set FILE_HEADER = 1 in the Smac parameter file you can read the information of the image header into a Smac1ImageInfo object like so:","category":"page"},{"location":"external/","page":"External Programs","title":"External Programs","text":"info = read_smac1_binary_info(filename)","category":"page"},{"location":"external/","page":"External Programs","title":"External Programs","text":"The Smac1ImageInfo object contains the following information","category":"page"},{"location":"external/","page":"External Programs","title":"External Programs","text":"struct Smac1ImageInfo\n\n    snap::Int32                 # number of input snapshot\n    z::Float32                  # redshift of snapshot\n    m_vir::Float32              # virial mass of halo\n    r_vir::Float32              # virial radius of halo\n    xcm::Float32                # x coordinate of image center\n    ycm::Float32                # y coordinate of image center\n    zcm::Float32                # z coordinate of image center\n    z_slice_kpc::Float32        # depth of the image in kpc\n    boxsize_kpc::Float32        # xy-size of the image in kpc\n    boxsize_pix::Float32        # xy-size of the image in pixels\n    pixsize_kpc::Float32        # size of one pixel in kpc\n    xlim::Array{Float64,1}      # x limits of image\n    ylim::Array{Float64,1}      # y limits of image\n    zlim::Array{Float64,1}      # z limits of image\n    units::String               # unitstring of image\n\nend\n","category":"page"},{"location":"external/#Reading-the-image","page":"External Programs","title":"Reading the image","text":"","category":"section"},{"location":"external/","page":"External Programs","title":"External Programs","text":"The image itself can be read with","category":"page"},{"location":"external/","page":"External Programs","title":"External Programs","text":"image = read_smac1_binary_image(filename)","category":"page"},{"location":"external/","page":"External Programs","title":"External Programs","text":"This will return an Array{Float32,2} with the pixel values. You can pass this to any imshow function of your favorite plotting package.","category":"page"},{"location":"mapping/#Mapping-SPH-Data","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"","category":"section"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"CurrentModule = SPHtoGrid\nDocTestSetup = quote\n    using SPHtoGrid\nend","category":"page"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"You can map SPH data to a grid using the function sphMapping:","category":"page"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"sphMapping( Pos, HSML, M, ρ, Bin_Quant;\n            param::mappingParameters,\n            kernel::SPHKernel,\n            show_progress::Bool=true,\n            conserve_quantities::Bool=false,\n            parallel::Bool=false,\n            filter_particles::Bool=true,\n            dimensions::Int=2)","category":"page"},{"location":"mapping/#Define-parameters-for-mapping","page":"Mapping SPH Data","title":"Define parameters for mapping","text":"","category":"section"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"To map the data you need to define the mapping parameters via the mappingParameters object. One way to set this up is by defining the limits of the map as","category":"page"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"par = mappingParameters(xlim=[xmin, xmax],\n                        ylim=[ymin, ymax],\n                        zlim=[zmin, zmax],\n                        Npixels=200)","category":"page"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"or give a center position and the size in each direction","category":"page"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"par = mappingParameters(center=[x0, y0, z0], \n                        x_size=x_size, \n                        y_size=y_size,\n                        z_size=z_size,\n                        Npixels=200)","category":"page"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"Instead of Npixels you can also give the keyword argument pixelSideLength if you prefer to define your image that way.","category":"page"},{"location":"mapping/#Select-Kernel","page":"Mapping SPH Data","title":"Select Kernel","text":"","category":"section"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"You also need to choose the kernel you used in the simulation. I implemented the following ones:","category":"page"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"k = Cubic()\nk = Quintic()\nk = WendlandC4()\nk = WendlandC6()","category":"page"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"Feel free to add new ones and issue pull requests!","category":"page"},{"location":"mapping/#Mapping","page":"Mapping SPH Data","title":"Mapping","text":"","category":"section"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"With the setup done you can now map (e.g.) density of your data using the function above as:","category":"page"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"image = sphMapping(x, hsml, m, rho, rho, param=par, kernel=k)","category":"page"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"Replacing the second rho with any other quantity would map that quantity of course. Please note: This function doesn't do any unit conversion for you, so you need to convert to the desired units beforehand. See the chapter on unit conversion for usage.","category":"page"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"Image now contains a 2D array with the binned data and can easily be plotted with imshow() from any plotting package of your choosing.","category":"page"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"Per default the keyword parallel = true causes the run to use multiple processors. For this you need to start julia with julia -p <N> where <N> is the number of processors in your machine.","category":"page"},{"location":"mapping/#Conserved-quantities","page":"Mapping SPH Data","title":"Conserved quantities","text":"","category":"section"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"With the latest release you can map the particles to a grid while also conserving the particle volume, following the algorithm described in Dolag et. al. 2006.","category":"page"},{"location":"mapping/","page":"Mapping SPH Data","title":"Mapping SPH Data","text":"This is switched off by default since it's slightly more expensive than simple mapping. If you want to use it simply call the mapping function with conserve_quantities=true.","category":"page"},{"location":"install/#Install","page":"Install","title":"Install","text":"","category":"section"},{"location":"install/","page":"Install","title":"Install","text":"As usual with Julia you can install the package via the internal package manager","category":"page"},{"location":"install/","page":"Install","title":"Install","text":"julia> ]\npkg> add https://github.com/LudwigBoess/SPHtoGrid.jl","category":"page"},{"location":"install/","page":"Install","title":"Install","text":"If you don't have it installed yet and until https://github.com/JuliaLang/Pkg.jl/pull/1628 has been merged you will also need to install GadgetIO.jl first","category":"page"},{"location":"install/","page":"Install","title":"Install","text":"julia> ]\npkg> add https://github.com/LudwigBoess/GadgetIO.jl","category":"page"},{"location":"install/","page":"Install","title":"Install","text":"Now you should be good to go!","category":"page"},{"location":"#Table-of-Contents","page":"Table of Contents","title":"Table of Contents","text":"","category":"section"},{"location":"","page":"Table of Contents","title":"Table of Contents","text":"Pages = [ \"index.md\", \n          \"install.md\", \n          \"mapping.md\",\n          \"external.md\", \n          \"api.md\"]\nDepth = 3","category":"page"}]
}
